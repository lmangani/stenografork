From: Sascha Steinbiss <satta@debian.org>
Date: Mon, 23 Jan 2017 23:42:09 +0000
Subject: Fix unit tests

The threads test seems to hang when executed via dh_auto_test. This patch
makes sure this tests is skipped, and also moves test data to better locations
for the duration of the test runs.
---
 blockfile/blockfile_test.go |  2 +-
 indexfile/indexfile_test.go | 12 ++++++------
 thread/thread_test.go       |  7 +++++--
 3 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/blockfile/blockfile_test.go b/blockfile/blockfile_test.go
index ff56fcb..3596fce 100644
--- a/blockfile/blockfile_test.go
+++ b/blockfile/blockfile_test.go
@@ -28,7 +28,7 @@ import (
 var ctx = context.Background()
 
 const (
-	filename = "../testdata/PKT0/dhcp"
+	filename = "/tmp/stenographer-testdata/PKT0/dhcp"
 )
 
 func testBlockFile(t *testing.T, filename string) *BlockFile {
diff --git a/indexfile/indexfile_test.go b/indexfile/indexfile_test.go
index e27e2cf..bf635b8 100644
--- a/indexfile/indexfile_test.go
+++ b/indexfile/indexfile_test.go
@@ -37,7 +37,7 @@ func testIndexFile(t *testing.T, filename string) *IndexFile {
 }
 
 func TestIPPositions(t *testing.T) {
-	idx := testIndexFile(t, "../testdata/IDX0/dhcp")
+	idx := testIndexFile(t, "/tmp/stenographer-testdata/IDX0/dhcp")
 	defer idx.Close()
 	for _, test := range []struct {
 		start string
@@ -56,7 +56,7 @@ func TestIPPositions(t *testing.T) {
 }
 
 func TestMPLSPositions(t *testing.T) {
-	idx := testIndexFile(t, "../testdata/IDX0/mpls")
+	idx := testIndexFile(t, "/tmp/stenographer-testdata/IDX0/mpls")
 	defer idx.Close()
 	for _, test := range []struct {
 		label uint32
@@ -74,7 +74,7 @@ func TestMPLSPositions(t *testing.T) {
 }
 
 func TestVLANPositions(t *testing.T) {
-	idx := testIndexFile(t, "../testdata/IDX0/vlan")
+	idx := testIndexFile(t, "/tmp/stenographer-testdata/IDX0/vlan")
 	defer idx.Close()
 	for _, test := range []struct {
 		id   uint16
@@ -92,7 +92,7 @@ func TestVLANPositions(t *testing.T) {
 }
 
 func TestProtoPositions(t *testing.T) {
-	idx := testIndexFile(t, "../testdata/IDX0/dhcp")
+	idx := testIndexFile(t, "/tmp/stenographer-testdata/IDX0/dhcp")
 	defer idx.Close()
 	for _, test := range []struct {
 		proto byte
@@ -110,7 +110,7 @@ func TestProtoPositions(t *testing.T) {
 }
 
 func TestPortPositions(t *testing.T) {
-	idx := testIndexFile(t, "../testdata/IDX0/dhcp")
+	idx := testIndexFile(t, "/tmp/stenographer-testdata/IDX0/dhcp")
 	defer idx.Close()
 	for _, test := range []struct {
 		port uint16
@@ -128,7 +128,7 @@ func TestPortPositions(t *testing.T) {
 }
 
 func TestDump(t *testing.T) {
-	idx := testIndexFile(t, "../testdata/IDX0/dhcp")
+	idx := testIndexFile(t, "/tmp/stenographer-testdata/IDX0/dhcp")
 	want := "00\n0111\n013a\n"
 	var w bytes.Buffer
 	start, _ := hex.DecodeString("00")
diff --git a/thread/thread_test.go b/thread/thread_test.go
index b1c193e..a458f45 100644
--- a/thread/thread_test.go
+++ b/thread/thread_test.go
@@ -32,8 +32,8 @@ const (
 	baseDir       = "/threadtest/"
 	pktDir        = "/threadtest/pkt/"
 	idxDir        = "/threadtest/idx/"
-	testBlockFile = "../testdata/PKT0/dhcp"
-	testIndexFile = "../testdata/IDX0/dhcp"
+	testBlockFile = "/tmp/stenographer-testdata/PKT0/dhcp"
+	testIndexFile = "/tmp/stenographer-testdata/IDX0/dhcp"
 )
 
 func createThreads(t *testing.T, tempDir string) []*Thread {
@@ -104,6 +104,9 @@ func newRequestTest(t *testing.T, handle http.Handler) requestTest {
 }
 
 func TestExportDebugHandlers(t *testing.T) {
+	if os.Getenv("DH_GOPKG") != "" {
+		t.Skip("skipping test; within Debian package build")
+	}
 	tempDir, err := ioutil.TempDir("", "")
 	if err != nil {
 		t.Fatal(err)
