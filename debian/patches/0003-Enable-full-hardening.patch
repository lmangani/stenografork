From: Sascha Steinbiss <satta@debian.org>
Date: Mon, 23 Jan 2017 23:42:09 +0000
Subject: Enable full hardening

---
 stenotype/Makefile | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

--- a/stenotype/Makefile
+++ b/stenotype/Makefile
@@ -56,12 +56,12 @@
 SANITIZE=
 ifndef SANITIZE
 	OBJECTS=$(foreach file,$(FILES),$(file)_opt.o)
-	CFLAGS=$(SHARED_CFLAGS) $(OPT_CFLAGS)
-	LDFLAGS=$(SHARED_LDFLAGS) $(OPT_LDFLAGS)
+	CFLAGS:=$(CFLAGS) $(SHARED_CFLAGS) $(OPT_CFLAGS)
+	LDFLAGS:=$(LDFLAGS) $(SHARED_LDFLAGS) $(OPT_LDFLAGS)
 else
 	OBJECTS=$(foreach file,$(FILES),$(file)_$(SANITIZE)_dbg.o)
-	CFLAGS=$(SHARED_CFLAGS) $(DBG_CFLAGS) -fsanitize=$(SANITIZE)
-	LDFLAGS=$(SHARED_LDFLAGS) $(DBG_LDFLAGS)
+	CFLAGS:=$(CFLAGS) $(SHARED_CFLAGS) $(DBG_CFLAGS) -fsanitize=$(SANITIZE)
+	LDFLAGS:=$(LDFLAGS) $(SHARED_LDFLAGS) $(DBG_LDFLAGS)
 	CXX=clang++ # Force clang if we're sanitizing
 endif
 ifeq "$(SANITIZE)" "memory"
@@ -78,15 +78,15 @@
 
 # Generate g++ object files.
 %_opt.o: %.cc $(DEPS)
-	$(CXX) $(CFLAGS) -c -o $@ $<
+	$(CXX) $(CFLAGS) $(CPPFLAGS) $(SHARED_CFLAGS) -c -o $@ $<
 
 # Generate clang object files.
 %_$(SANITIZE)_dbg.o: %.cc $(DEPS)
-	$(CXX) $(CFLAGS) -c -o $@ $<
+	$(CXX) $(CFLAGS) $(CPPFLAGS) $(SHARED_CFLAGS) -c -o $@ $<
 
 # Generate the stenotype binary itself.  You mostly want this :)
 stenotype: $(OBJECTS)
-	$(CXX) $(CFLAGS) -o $@ $^ $(LDFLAGS)
+	$(CXX) $(CFLAGS) $(CPPFLAGS) -o $@ $^ $(LDFLAGS)
 
 
 
